package com.madhavan.projecteuler;

import java.math.BigInteger;
import java.util.Date;
import java.util.stream.IntStream;

/**
 * author e3016939, Madhavan Jayaraman
 * date 1/23/20 , time 12:07 PM
 * project_name ProjectEuler
 * package_name com.madhavan.projecteuler\
 **/
/*
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
and D = |Pk − Pj| is minimised; what is the value of D?
 */
public class PentagonNumbers {
    public static void main(String[] args) {

       /* for(int i=1; i<Integer.MAX_VALUE;i++) {
            BigInteger getPentagonNumber = getPentagonalNumber(new BigInteger(String.valueOf(i)));
           System.out.println(getPentagonNumber);
        }*/

        long startTime = new Date().getTime();

        IntStream.range(1, 100).parallel().forEach(i->{
            BigInteger getPentagonNumber = getPentagonalNumber(new BigInteger(String.valueOf(i)));
            System.out.println(getPentagonNumber);
        });

        for(int i=1; i<100;i++) {
            BigInteger getPentagonNumber = getPentagonalNumber(new BigInteger(String.valueOf(i)));
            System.out.println(getPentagonNumber);
        }

        long endTime = new Date().getTime();
        long difference = endTime - startTime;
        System.out.println("Elapsed time in milliseconds: " + difference);
    }

    private static BigInteger getPentagonalNumber(BigInteger bigInteger){
        /** Formula for arriving pentagon number ***/
        BigInteger result =(BigInteger.valueOf(3l).multiply(bigInteger).subtract(BigInteger.ONE)).multiply(bigInteger).divide(BigInteger.valueOf(2l));
        return result;
    }
}
